// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resource.API.Persistences;

namespace Resource.API.Migrations
{
    [DbContext(typeof(ResourceDbContext))]
    [Migration("20220614154254_updatefilemodel")]
    partial class updatefilemodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Service.Core.Models.Resources.DomainDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DomainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ParentDirectoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentDirectoryId");

                    b.ToTable("DomainDirectories");
                });

            modelBuilder.Entity("Service.Core.Models.Resources.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbsolutePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DirectoryId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DirectoryId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Service.Core.Models.Resources.DomainDirectory", b =>
                {
                    b.HasOne("Service.Core.Models.Resources.DomainDirectory", "ParentDirectory")
                        .WithMany("ChildDirectories")
                        .HasForeignKey("ParentDirectoryId");

                    b.Navigation("ParentDirectory");
                });

            modelBuilder.Entity("Service.Core.Models.Resources.File", b =>
                {
                    b.HasOne("Service.Core.Models.Resources.DomainDirectory", "Directory")
                        .WithMany("Files")
                        .HasForeignKey("DirectoryId");

                    b.Navigation("Directory");
                });

            modelBuilder.Entity("Service.Core.Models.Resources.DomainDirectory", b =>
                {
                    b.Navigation("ChildDirectories");

                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
