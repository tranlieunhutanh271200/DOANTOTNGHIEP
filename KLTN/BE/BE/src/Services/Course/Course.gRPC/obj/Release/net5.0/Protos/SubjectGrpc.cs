// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Subject.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Course.gRPC.Protos {
  public static partial class SubjectProtoService
  {
    static readonly string __ServiceName = "SubjectProtoService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Course.gRPC.Protos.SeedRequest> __Marshaller_SeedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.SeedRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.SeedResponse> __Marshaller_SeedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.SeedResponse.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetSubjectsByDomainRequest> __Marshaller_GetSubjectsByDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetSubjectsByDomainRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.SubjectListModel> __Marshaller_SubjectListModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.SubjectListModel.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetStudentSubjectsBySemesterRequest> __Marshaller_GetStudentSubjectsBySemesterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetStudentSubjectsBySemesterRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetMasterDataRequest> __Marshaller_GetMasterDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetMasterDataRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetMasterDataResponse> __Marshaller_GetMasterDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetMasterDataResponse.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetSubjectDetailRequest> __Marshaller_GetSubjectDetailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetSubjectDetailRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetSubjectDetailResponse> __Marshaller_GetSubjectDetailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetSubjectDetailResponse.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetSubjectsRequest> __Marshaller_GetSubjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetSubjectsRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetSubjectResponse> __Marshaller_GetSubjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetSubjectResponse.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetExamRequest> __Marshaller_GetExamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetExamRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetExamResponse> __Marshaller_GetExamResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetExamResponse.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.DoExamRequest> __Marshaller_DoExamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.DoExamRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.DoExamResponse> __Marshaller_DoExamResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.DoExamResponse.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDSubjectReq> __Marshaller_CRUDSubjectReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDSubjectReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDResp> __Marshaller_CRUDResp = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDResp.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDQuestionReq> __Marshaller_CRUDQuestionReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDQuestionReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDSectionReq> __Marshaller_CRUDSectionReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDSectionReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDContextScriptReq> __Marshaller_CRUDContextScriptReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDContextScriptReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDAssignmentScriptReq> __Marshaller_CRUDAssignmentScriptReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDAssignmentScriptReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDDocumentScriptReq> __Marshaller_CRUDDocumentScriptReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDDocumentScriptReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDExamScriptReq> __Marshaller_CRUDExamScriptReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDExamScriptReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.ImportStudentRequest> __Marshaller_ImportStudentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.ImportStudentRequest.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetStudentsReq> __Marshaller_GetStudentsReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetStudentsReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetStudentsResp> __Marshaller_GetStudentsResp = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetStudentsResp.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDStudentReq> __Marshaller_CRUDStudentReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDStudentReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetTeachersReq> __Marshaller_GetTeachersReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetTeachersReq.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.GetTeachersResp> __Marshaller_GetTeachersResp = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.GetTeachersResp.Parser));
    static readonly grpc::Marshaller<global::Course.gRPC.Protos.CRUDTeacherReq> __Marshaller_CRUDTeacherReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Course.gRPC.Protos.CRUDTeacherReq.Parser));

    static readonly grpc::Method<global::Course.gRPC.Protos.SeedRequest, global::Course.gRPC.Protos.SeedResponse> __Method_SeedData = new grpc::Method<global::Course.gRPC.Protos.SeedRequest, global::Course.gRPC.Protos.SeedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SeedData",
        __Marshaller_SeedRequest,
        __Marshaller_SeedResponse);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetSubjectsByDomainRequest, global::Course.gRPC.Protos.SubjectListModel> __Method_GetAllSubjectByDomain = new grpc::Method<global::Course.gRPC.Protos.GetSubjectsByDomainRequest, global::Course.gRPC.Protos.SubjectListModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubjectByDomain",
        __Marshaller_GetSubjectsByDomainRequest,
        __Marshaller_SubjectListModel);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetStudentSubjectsBySemesterRequest, global::Course.gRPC.Protos.SubjectListModel> __Method_GetStudentSubjectsBySemester = new grpc::Method<global::Course.gRPC.Protos.GetStudentSubjectsBySemesterRequest, global::Course.gRPC.Protos.SubjectListModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStudentSubjectsBySemester",
        __Marshaller_GetStudentSubjectsBySemesterRequest,
        __Marshaller_SubjectListModel);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetMasterDataRequest, global::Course.gRPC.Protos.GetMasterDataResponse> __Method_GetMasterData = new grpc::Method<global::Course.gRPC.Protos.GetMasterDataRequest, global::Course.gRPC.Protos.GetMasterDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMasterData",
        __Marshaller_GetMasterDataRequest,
        __Marshaller_GetMasterDataResponse);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetSubjectDetailRequest, global::Course.gRPC.Protos.GetSubjectDetailResponse> __Method_GetSubjectDetail = new grpc::Method<global::Course.gRPC.Protos.GetSubjectDetailRequest, global::Course.gRPC.Protos.GetSubjectDetailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubjectDetail",
        __Marshaller_GetSubjectDetailRequest,
        __Marshaller_GetSubjectDetailResponse);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetSubjectsRequest, global::Course.gRPC.Protos.GetSubjectResponse> __Method_GetSubjects = new grpc::Method<global::Course.gRPC.Protos.GetSubjectsRequest, global::Course.gRPC.Protos.GetSubjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubjects",
        __Marshaller_GetSubjectsRequest,
        __Marshaller_GetSubjectResponse);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetExamRequest, global::Course.gRPC.Protos.GetExamResponse> __Method_GetExam = new grpc::Method<global::Course.gRPC.Protos.GetExamRequest, global::Course.gRPC.Protos.GetExamResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExam",
        __Marshaller_GetExamRequest,
        __Marshaller_GetExamResponse);

    static readonly grpc::Method<global::Course.gRPC.Protos.DoExamRequest, global::Course.gRPC.Protos.DoExamResponse> __Method_DoExam = new grpc::Method<global::Course.gRPC.Protos.DoExamRequest, global::Course.gRPC.Protos.DoExamResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoExam",
        __Marshaller_DoExamRequest,
        __Marshaller_DoExamResponse);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDSubjectReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDSubject = new grpc::Method<global::Course.gRPC.Protos.CRUDSubjectReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDSubject",
        __Marshaller_CRUDSubjectReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDQuestionReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDQuestion = new grpc::Method<global::Course.gRPC.Protos.CRUDQuestionReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDQuestion",
        __Marshaller_CRUDQuestionReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDSectionReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDSection = new grpc::Method<global::Course.gRPC.Protos.CRUDSectionReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDSection",
        __Marshaller_CRUDSectionReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDContextScriptReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDContextScript = new grpc::Method<global::Course.gRPC.Protos.CRUDContextScriptReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDContextScript",
        __Marshaller_CRUDContextScriptReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDAssignmentScriptReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDAssignmentScript = new grpc::Method<global::Course.gRPC.Protos.CRUDAssignmentScriptReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDAssignmentScript",
        __Marshaller_CRUDAssignmentScriptReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDDocumentScriptReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDDocumentScript = new grpc::Method<global::Course.gRPC.Protos.CRUDDocumentScriptReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDDocumentScript",
        __Marshaller_CRUDDocumentScriptReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDExamScriptReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDExamScript = new grpc::Method<global::Course.gRPC.Protos.CRUDExamScriptReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDExamScript",
        __Marshaller_CRUDExamScriptReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.ImportStudentRequest, global::Course.gRPC.Protos.CRUDResp> __Method_ImportStudents = new grpc::Method<global::Course.gRPC.Protos.ImportStudentRequest, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportStudents",
        __Marshaller_ImportStudentRequest,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetStudentsReq, global::Course.gRPC.Protos.GetStudentsResp> __Method_GetStudents = new grpc::Method<global::Course.gRPC.Protos.GetStudentsReq, global::Course.gRPC.Protos.GetStudentsResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStudents",
        __Marshaller_GetStudentsReq,
        __Marshaller_GetStudentsResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDStudentReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDStudent = new grpc::Method<global::Course.gRPC.Protos.CRUDStudentReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDStudent",
        __Marshaller_CRUDStudentReq,
        __Marshaller_CRUDResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.GetTeachersReq, global::Course.gRPC.Protos.GetTeachersResp> __Method_GetTeachers = new grpc::Method<global::Course.gRPC.Protos.GetTeachersReq, global::Course.gRPC.Protos.GetTeachersResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTeachers",
        __Marshaller_GetTeachersReq,
        __Marshaller_GetTeachersResp);

    static readonly grpc::Method<global::Course.gRPC.Protos.CRUDTeacherReq, global::Course.gRPC.Protos.CRUDResp> __Method_CRUDTeacher = new grpc::Method<global::Course.gRPC.Protos.CRUDTeacherReq, global::Course.gRPC.Protos.CRUDResp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CRUDTeacher",
        __Marshaller_CRUDTeacherReq,
        __Marshaller_CRUDResp);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Course.gRPC.Protos.SubjectReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SubjectProtoService</summary>
    [grpc::BindServiceMethod(typeof(SubjectProtoService), "BindService")]
    public abstract partial class SubjectProtoServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.SeedResponse> SeedData(global::Course.gRPC.Protos.SeedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.SubjectListModel> GetAllSubjectByDomain(global::Course.gRPC.Protos.GetSubjectsByDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.SubjectListModel> GetStudentSubjectsBySemester(global::Course.gRPC.Protos.GetStudentSubjectsBySemesterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.GetMasterDataResponse> GetMasterData(global::Course.gRPC.Protos.GetMasterDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.GetSubjectDetailResponse> GetSubjectDetail(global::Course.gRPC.Protos.GetSubjectDetailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.GetSubjectResponse> GetSubjects(global::Course.gRPC.Protos.GetSubjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.GetExamResponse> GetExam(global::Course.gRPC.Protos.GetExamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.DoExamResponse> DoExam(global::Course.gRPC.Protos.DoExamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDSubject(global::Course.gRPC.Protos.CRUDSubjectReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDQuestion(global::Course.gRPC.Protos.CRUDQuestionReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDSection(global::Course.gRPC.Protos.CRUDSectionReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDContextScript(global::Course.gRPC.Protos.CRUDContextScriptReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDAssignmentScript(global::Course.gRPC.Protos.CRUDAssignmentScriptReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDDocumentScript(global::Course.gRPC.Protos.CRUDDocumentScriptReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDExamScript(global::Course.gRPC.Protos.CRUDExamScriptReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> ImportStudents(global::Course.gRPC.Protos.ImportStudentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.GetStudentsResp> GetStudents(global::Course.gRPC.Protos.GetStudentsReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDStudent(global::Course.gRPC.Protos.CRUDStudentReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.GetTeachersResp> GetTeachers(global::Course.gRPC.Protos.GetTeachersReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Course.gRPC.Protos.CRUDResp> CRUDTeacher(global::Course.gRPC.Protos.CRUDTeacherReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SubjectProtoServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SeedData, serviceImpl.SeedData)
          .AddMethod(__Method_GetAllSubjectByDomain, serviceImpl.GetAllSubjectByDomain)
          .AddMethod(__Method_GetStudentSubjectsBySemester, serviceImpl.GetStudentSubjectsBySemester)
          .AddMethod(__Method_GetMasterData, serviceImpl.GetMasterData)
          .AddMethod(__Method_GetSubjectDetail, serviceImpl.GetSubjectDetail)
          .AddMethod(__Method_GetSubjects, serviceImpl.GetSubjects)
          .AddMethod(__Method_GetExam, serviceImpl.GetExam)
          .AddMethod(__Method_DoExam, serviceImpl.DoExam)
          .AddMethod(__Method_CRUDSubject, serviceImpl.CRUDSubject)
          .AddMethod(__Method_CRUDQuestion, serviceImpl.CRUDQuestion)
          .AddMethod(__Method_CRUDSection, serviceImpl.CRUDSection)
          .AddMethod(__Method_CRUDContextScript, serviceImpl.CRUDContextScript)
          .AddMethod(__Method_CRUDAssignmentScript, serviceImpl.CRUDAssignmentScript)
          .AddMethod(__Method_CRUDDocumentScript, serviceImpl.CRUDDocumentScript)
          .AddMethod(__Method_CRUDExamScript, serviceImpl.CRUDExamScript)
          .AddMethod(__Method_ImportStudents, serviceImpl.ImportStudents)
          .AddMethod(__Method_GetStudents, serviceImpl.GetStudents)
          .AddMethod(__Method_CRUDStudent, serviceImpl.CRUDStudent)
          .AddMethod(__Method_GetTeachers, serviceImpl.GetTeachers)
          .AddMethod(__Method_CRUDTeacher, serviceImpl.CRUDTeacher).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SubjectProtoServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SeedData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.SeedRequest, global::Course.gRPC.Protos.SeedResponse>(serviceImpl.SeedData));
      serviceBinder.AddMethod(__Method_GetAllSubjectByDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetSubjectsByDomainRequest, global::Course.gRPC.Protos.SubjectListModel>(serviceImpl.GetAllSubjectByDomain));
      serviceBinder.AddMethod(__Method_GetStudentSubjectsBySemester, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetStudentSubjectsBySemesterRequest, global::Course.gRPC.Protos.SubjectListModel>(serviceImpl.GetStudentSubjectsBySemester));
      serviceBinder.AddMethod(__Method_GetMasterData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetMasterDataRequest, global::Course.gRPC.Protos.GetMasterDataResponse>(serviceImpl.GetMasterData));
      serviceBinder.AddMethod(__Method_GetSubjectDetail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetSubjectDetailRequest, global::Course.gRPC.Protos.GetSubjectDetailResponse>(serviceImpl.GetSubjectDetail));
      serviceBinder.AddMethod(__Method_GetSubjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetSubjectsRequest, global::Course.gRPC.Protos.GetSubjectResponse>(serviceImpl.GetSubjects));
      serviceBinder.AddMethod(__Method_GetExam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetExamRequest, global::Course.gRPC.Protos.GetExamResponse>(serviceImpl.GetExam));
      serviceBinder.AddMethod(__Method_DoExam, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.DoExamRequest, global::Course.gRPC.Protos.DoExamResponse>(serviceImpl.DoExam));
      serviceBinder.AddMethod(__Method_CRUDSubject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDSubjectReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDSubject));
      serviceBinder.AddMethod(__Method_CRUDQuestion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDQuestionReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDQuestion));
      serviceBinder.AddMethod(__Method_CRUDSection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDSectionReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDSection));
      serviceBinder.AddMethod(__Method_CRUDContextScript, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDContextScriptReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDContextScript));
      serviceBinder.AddMethod(__Method_CRUDAssignmentScript, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDAssignmentScriptReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDAssignmentScript));
      serviceBinder.AddMethod(__Method_CRUDDocumentScript, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDDocumentScriptReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDDocumentScript));
      serviceBinder.AddMethod(__Method_CRUDExamScript, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDExamScriptReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDExamScript));
      serviceBinder.AddMethod(__Method_ImportStudents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.ImportStudentRequest, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.ImportStudents));
      serviceBinder.AddMethod(__Method_GetStudents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetStudentsReq, global::Course.gRPC.Protos.GetStudentsResp>(serviceImpl.GetStudents));
      serviceBinder.AddMethod(__Method_CRUDStudent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDStudentReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDStudent));
      serviceBinder.AddMethod(__Method_GetTeachers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.GetTeachersReq, global::Course.gRPC.Protos.GetTeachersResp>(serviceImpl.GetTeachers));
      serviceBinder.AddMethod(__Method_CRUDTeacher, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Course.gRPC.Protos.CRUDTeacherReq, global::Course.gRPC.Protos.CRUDResp>(serviceImpl.CRUDTeacher));
    }

  }
}
#endregion
